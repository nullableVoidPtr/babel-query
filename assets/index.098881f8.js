import{l as j,e as k,K as z,R as I}from"./monaco.aebca184.js";import{l as A,a as D,b as M,p as R}from"./babel.6ff61e39.js";import{n as O}from"./vendor.56f2a833.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))t(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&t(c)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerpolicy&&(o.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?o.credentials="include":r.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function t(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();function b(e){return e[0]}const w=e=>e.replace(/\\(.)/g,(s,n)=>{switch(n){case"b":return"\b";case"f":return"\f";case"n":return`
`;case"r":return"\r";case"t":return"	";case"v":return"\v";default:return n}}),K={Lexer:void 0,ParserRules:[{name:"start",symbols:["_","selectors","_"],postprocess:e=>e[1]},{name:"start",symbols:["_"]},{name:"selectors$ebnf$1",symbols:[]},{name:"selectors$ebnf$1$subexpression$1",symbols:["_",{literal:","},"_","selector"]},{name:"selectors$ebnf$1",symbols:["selectors$ebnf$1","selectors$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"selectors",symbols:["selector","selectors$ebnf$1"],postprocess:e=>e[1].length===0?e[0]:{type:"list",list:[e[0],...e[1].map(s=>s[3])]}},{name:"relativeCombinator",symbols:["_",{literal:"~"},"_"],postprocess:()=>"sibling"},{name:"relativeCombinator",symbols:["_",{literal:"+"},"_"],postprocess:()=>"adjacent"},{name:"relativeCombinator",symbols:["_",{literal:">"},"_"],postprocess:()=>"child"},{name:"combinator",symbols:["relativeCombinator"],postprocess:b},{name:"combinator",symbols:[{literal:" "},"_"],postprocess:()=>"descendant"},{name:"selector",symbols:["sequence"],postprocess:e=>e[0]},{name:"selector",symbols:["selector","combinator","sequence"],postprocess:([e,s,n],t,r)=>e===null||n===null?r:{type:"complex",combinator:s,left:e,right:n}},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1",/[ ]/],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:e=>null},{name:"sequence$ebnf$1",symbols:["startAtom"],postprocess:b},{name:"sequence$ebnf$1",symbols:[],postprocess:()=>null},{name:"sequence$ebnf$2",symbols:[]},{name:"sequence$ebnf$2",symbols:["sequence$ebnf$2","specifierAtom"],postprocess:e=>e[0].concat([e[1]])},{name:"sequence",symbols:["sequence$ebnf$1","sequence$ebnf$2"],postprocess:([e,s],n,t)=>{if(e===null&&s.length===0)return t;let r;return s.length===1&&e===null?r=s[0]:s.length>0?r={type:"compound",list:e===null?s:[e,...s]}:r=e,r}},{name:"field$subexpression$1",symbols:["number"]},{name:"field$subexpression$1",symbols:["identifier"]},{name:"field",symbols:[{literal:"."},"field$subexpression$1"],postprocess:e=>e[1][0]},{name:"sequence$ebnf$3",symbols:["sequence"],postprocess:b},{name:"sequence$ebnf$3",symbols:[],postprocess:()=>null},{name:"sequence$ebnf$4",symbols:[]},{name:"sequence$ebnf$4",symbols:["sequence$ebnf$4","specifierAtom"],postprocess:e=>e[0].concat([e[1]])},{name:"sequence",symbols:["sequence$ebnf$3","field","sequence$ebnf$4"],postprocess:([e,s,n])=>{let t=null;n.length===1?t=n[0]:n.length>1&&(t={type:"compound",list:n});let r;return(e==null?void 0:e.type)==="ancestry"?r=structuredClone(e):r={type:"ancestry",subject:e,path:[]},r.path.push({key:s,specifier:t}),r}},{name:"startAtom",symbols:["wildcard"],postprocess:b},{name:"startAtom",symbols:["identifier"],postprocess:e=>({type:"type",name:e[0]})},{name:"specifierAtom$subexpression$1",symbols:["attr"]},{name:"specifierAtom$subexpression$1",symbols:["pseudoSelector"]},{name:"specifierAtom",symbols:["specifierAtom$subexpression$1"],postprocess:e=>e[0][0]},{name:"wildcard",symbols:[{literal:"*"}],postprocess:()=>({type:"wildcard"})},{name:"identifier$ebnf$1",symbols:[]},{name:"identifier$ebnf$1",symbols:["identifier$ebnf$1",/[_a-zA-Z0-9-]/],postprocess:e=>e[0].concat([e[1]])},{name:"identifier",symbols:[/[_a-zA-Z]/,"identifier$ebnf$1"],postprocess:e=>e[0]+e[1].join("")},{name:"float$ebnf$1",symbols:[/[\+-]/],postprocess:b},{name:"float$ebnf$1",symbols:[],postprocess:()=>null},{name:"float$ebnf$2",symbols:[/[0-9]/]},{name:"float$ebnf$2",symbols:["float$ebnf$2",/[0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"float$ebnf$3",symbols:[]},{name:"float$ebnf$3",symbols:["float$ebnf$3",/[0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"float",symbols:["float$ebnf$1","float$ebnf$2",{literal:"."},"float$ebnf$3"],postprocess:e=>parseFloat((e[0]==="-"?"-":"")+e[1].join("")+"."+e[3].join(""))},{name:"integer$ebnf$1",symbols:[/[\+-]/],postprocess:b},{name:"integer$ebnf$1",symbols:[],postprocess:()=>null},{name:"integer$ebnf$2",symbols:[/[0-9]/]},{name:"integer$ebnf$2",symbols:["integer$ebnf$2",/[0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"integer",symbols:["integer$ebnf$1","integer$ebnf$2"],postprocess:e=>parseInt((e[0]==="-"?"-":"")+e[1].join(""))},{name:"number",symbols:["float"]},{name:"number",symbols:["integer"],postprocess:b},{name:"attr",symbols:[{literal:"["},"_","attrValue","_",{literal:"]"}],postprocess:e=>e[2]},{name:"attrEqOps$ebnf$1",symbols:[{literal:"!"}],postprocess:b},{name:"attrEqOps$ebnf$1",symbols:[],postprocess:()=>null},{name:"attrEqOps",symbols:["attrEqOps$ebnf$1",{literal:"="}],postprocess:e=>(e[0]!==null?"!":"")+e[1]},{name:"attrNumOps",symbols:["attrEqOps"],postprocess:b},{name:"attrNumOps",symbols:[/[><]/],postprocess:b},{name:"attrNumOps$subexpression$1$string$1",symbols:[{literal:">"},{literal:"="}],postprocess:e=>e.join("")},{name:"attrNumOps$subexpression$1",symbols:["attrNumOps$subexpression$1$string$1"]},{name:"attrNumOps$subexpression$1$string$2",symbols:[{literal:"<"},{literal:"="}],postprocess:e=>e.join("")},{name:"attrNumOps$subexpression$1",symbols:["attrNumOps$subexpression$1$string$2"]},{name:"attrNumOps",symbols:["attrNumOps$subexpression$1"],postprocess:e=>e[0].join("")},{name:"attrStrOps$subexpression$1$string$1",symbols:[{literal:"^"},{literal:"="}],postprocess:e=>e.join("")},{name:"attrStrOps$subexpression$1",symbols:["attrStrOps$subexpression$1$string$1"]},{name:"attrStrOps$subexpression$1$string$2",symbols:[{literal:"$"},{literal:"="}],postprocess:e=>e.join("")},{name:"attrStrOps$subexpression$1",symbols:["attrStrOps$subexpression$1$string$2"]},{name:"attrStrOps$subexpression$1$string$3",symbols:[{literal:"*"},{literal:"="}],postprocess:e=>e.join("")},{name:"attrStrOps$subexpression$1",symbols:["attrStrOps$subexpression$1$string$3"]},{name:"attrStrOps",symbols:["attrStrOps$subexpression$1"],postprocess:e=>e[0].join("")},{name:"attrStrOps",symbols:["attrEqOps"],postprocess:b},{name:"attrName$ebnf$1",symbols:[]},{name:"attrName$ebnf$1$subexpression$1$subexpression$1",symbols:["number"]},{name:"attrName$ebnf$1$subexpression$1$subexpression$1",symbols:["identifier"]},{name:"attrName$ebnf$1$subexpression$1",symbols:[{literal:"."},"attrName$ebnf$1$subexpression$1$subexpression$1"]},{name:"attrName$ebnf$1",symbols:["attrName$ebnf$1","attrName$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"attrName",symbols:["identifier","attrName$ebnf$1"],postprocess:e=>{var s;return[e[0],...((s=e[1])!=null?s:[]).map(([n,t])=>t[0])]}},{name:"attrValue$subexpression$1$subexpression$1",symbols:["attrName","_","attrEqOps","_","regex"]},{name:"attrValue$subexpression$1",symbols:["attrValue$subexpression$1$subexpression$1"]},{name:"attrValue$subexpression$1$subexpression$2",symbols:["attrName","_","attrNumOps","_","number"]},{name:"attrValue$subexpression$1",symbols:["attrValue$subexpression$1$subexpression$2"]},{name:"attrValue$subexpression$1$subexpression$3",symbols:["attrName","_","attrStrOps","_","string"]},{name:"attrValue$subexpression$1",symbols:["attrValue$subexpression$1$subexpression$3"]},{name:"attrValue",symbols:["attrValue$subexpression$1"],postprocess:([[[e,s,n,t,r]]],o,c)=>e===null||n===null||r===null?c:{type:"attribute",names:e,operator:n,right:r}},{name:"attrValue",symbols:["attrName"],postprocess:e=>({type:"attribute",names:e[0]})},{name:"string$ebnf$1",symbols:[]},{name:"string$ebnf$1",symbols:["string$ebnf$1",/[^"]/],postprocess:e=>e[0].concat([e[1]])},{name:"string",symbols:[{literal:'"'},"string$ebnf$1",{literal:'"'}],postprocess:e=>w(e[1].join(""))},{name:"string$ebnf$2",symbols:[]},{name:"string$ebnf$2",symbols:["string$ebnf$2",/[^']/],postprocess:e=>e[0].concat([e[1]])},{name:"string",symbols:[{literal:"'"},"string$ebnf$2",{literal:"'"}],postprocess:e=>w(e[1].join(""))},{name:"flags$ebnf$1",symbols:[/[imsu]/]},{name:"flags$ebnf$1",symbols:["flags$ebnf$1",/[imsu]/],postprocess:e=>e[0].concat([e[1]])},{name:"flags",symbols:["flags$ebnf$1"],postprocess:e=>e[0].join("")},{name:"regex$ebnf$1",symbols:[/[^/]/]},{name:"regex$ebnf$1",symbols:["regex$ebnf$1",/[^/]/],postprocess:e=>e[0].concat([e[1]])},{name:"regex$ebnf$2",symbols:["flags"],postprocess:b},{name:"regex$ebnf$2",symbols:[],postprocess:()=>null},{name:"regex",symbols:[{literal:"/"},"regex$ebnf$1",{literal:"/"},"regex$ebnf$2"],postprocess:e=>{var s;return new RegExp(e[1].join(""),(s=e[3])!=null?s:"")}},{name:"pseudoSelector$subexpression$1",symbols:["root"]},{name:"pseudoSelector$subexpression$1",symbols:["logicalSelector"]},{name:"pseudoSelector$subexpression$1",symbols:["firstChild"]},{name:"pseudoSelector$subexpression$1",symbols:["lastChild"]},{name:"pseudoSelector$subexpression$1",symbols:["nthChild"]},{name:"pseudoSelector$subexpression$1",symbols:["nthLastChild"]},{name:"pseudoSelector$subexpression$1",symbols:["onlyChild"]},{name:"pseudoSelector",symbols:[{literal:":"},"pseudoSelector$subexpression$1"],postprocess:e=>e[1][0]},{name:"root$string$1",symbols:[{literal:"r"},{literal:"o"},{literal:"o"},{literal:"t"}],postprocess:e=>e.join("")},{name:"root",symbols:["root$string$1"],postprocess:()=>({type:"root"})},{name:"nthExpr$ebnf$1$subexpression$1",symbols:["integer"]},{name:"nthExpr$ebnf$1$subexpression$1",symbols:[{literal:"-"}]},{name:"nthExpr$ebnf$1$subexpression$1",symbols:[{literal:"+"}]},{name:"nthExpr$ebnf$1",symbols:["nthExpr$ebnf$1$subexpression$1"],postprocess:b},{name:"nthExpr$ebnf$1",symbols:[],postprocess:()=>null},{name:"nthExpr$ebnf$2$subexpression$1",symbols:["_",/[\+-]/,"_","integer"]},{name:"nthExpr$ebnf$2",symbols:["nthExpr$ebnf$2$subexpression$1"],postprocess:b},{name:"nthExpr$ebnf$2",symbols:[],postprocess:()=>null},{name:"nthExpr",symbols:["nthExpr$ebnf$1",{literal:"n"},"nthExpr$ebnf$2"],postprocess:e=>{let s=1;e[0]!==null&&(e[0][0]==="-"?s=-1:typeof e[0][0]=="number"&&(s=e[0][0]));let n=0;if(e[2]!==null){let t=e[2][1];n=e[2][3],t==="-"&&(n=-n)}return{type:"nthExpr",multiplier:s,offset:n}}},{name:"nthExpr$string$1",symbols:[{literal:"o"},{literal:"d"},{literal:"d"}],postprocess:e=>e.join("")},{name:"nthExpr",symbols:["nthExpr$string$1"],postprocess:e=>({type:"nthExpr",multiplier:2,offset:1})},{name:"nthExpr$string$2",symbols:[{literal:"e"},{literal:"v"},{literal:"e"},{literal:"n"}],postprocess:e=>e.join("")},{name:"nthExpr",symbols:["nthExpr$string$2"],postprocess:e=>({type:"nthExpr",multiplier:2,offset:0})},{name:"nthExpr",symbols:["integer"],postprocess:([e])=>({type:"nthExpr",multiplier:0,offset:e})},{name:"logicalSelector$subexpression$1$string$1",symbols:[{literal:"i"},{literal:"s"}],postprocess:e=>e.join("")},{name:"logicalSelector$subexpression$1",symbols:["logicalSelector$subexpression$1$string$1"]},{name:"logicalSelector$subexpression$1$string$2",symbols:[{literal:"m"},{literal:"a"},{literal:"t"},{literal:"c"},{literal:"h"},{literal:"e"},{literal:"s"}],postprocess:e=>e.join("")},{name:"logicalSelector$subexpression$1",symbols:["logicalSelector$subexpression$1$string$2"]},{name:"logicalSelector$subexpression$1$string$3",symbols:[{literal:"w"},{literal:"h"},{literal:"e"},{literal:"r"},{literal:"e"}],postprocess:e=>e.join("")},{name:"logicalSelector$subexpression$1",symbols:["logicalSelector$subexpression$1$string$3"]},{name:"logicalSelector",symbols:["logicalSelector$subexpression$1",{literal:"("},"_","selectors","_",{literal:")"}],postprocess:(e,s,n)=>e[3]===null?n:{type:"is",argument:e[3]}},{name:"relativeSelector$ebnf$1",symbols:["relativeCombinator"],postprocess:b},{name:"relativeSelector$ebnf$1",symbols:[],postprocess:()=>null},{name:"relativeSelector",symbols:["relativeSelector$ebnf$1","selector"],postprocess:([e,s],n,t)=>s===null?t:[e!=null?e:"descendant",s]},{name:"logicalSelector$string$1",symbols:[{literal:"h"},{literal:"a"},{literal:"s"}],postprocess:e=>e.join("")},{name:"logicalSelector$ebnf$1",symbols:[]},{name:"logicalSelector$ebnf$1$subexpression$1",symbols:["_",{literal:","},"_","relativeSelector"]},{name:"logicalSelector$ebnf$1",symbols:["logicalSelector$ebnf$1","logicalSelector$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"logicalSelector",symbols:["logicalSelector$string$1",{literal:"("},"_","relativeSelector","logicalSelector$ebnf$1","_",{literal:")"}],postprocess:e=>{const s=[];for(const[n,t]of[e[3],...e[4].map(r=>r[3])])s.push({combinator:n,selector:t});return{type:"has",list:s}}},{name:"logicalSelector$string$2",symbols:[{literal:"n"},{literal:"o"},{literal:"t"}],postprocess:e=>e.join("")},{name:"logicalSelector",symbols:["logicalSelector$string$2",{literal:"("},"_","selectors","_",{literal:")"}],postprocess:(e,s,n)=>e[3]===null?n:{type:"not",argument:e[3]}},{name:"firstChild$string$1",symbols:[{literal:"f"},{literal:"i"},{literal:"r"},{literal:"s"},{literal:"t"},{literal:"-"},{literal:"c"},{literal:"h"},{literal:"i"},{literal:"l"},{literal:"d"}],postprocess:e=>e.join("")},{name:"firstChild",symbols:["firstChild$string$1"],postprocess:()=>({type:"nth-child",index:1})},{name:"lastChild$string$1",symbols:[{literal:"l"},{literal:"a"},{literal:"s"},{literal:"t"},{literal:"-"},{literal:"c"},{literal:"h"},{literal:"i"},{literal:"l"},{literal:"d"}],postprocess:e=>e.join("")},{name:"lastChild",symbols:["lastChild$string$1"],postprocess:()=>({type:"nth-child",index:-1})},{name:"nthChild$string$1",symbols:[{literal:"n"},{literal:"t"},{literal:"h"},{literal:"-"},{literal:"c"},{literal:"h"},{literal:"i"},{literal:"l"},{literal:"d"},{literal:"("}],postprocess:e=>e.join("")},{name:"nthChild",symbols:["nthChild$string$1","nthExpr",{literal:")"}],postprocess:e=>({type:"nth-child",index:e[1]})},{name:"nthLastChild$string$1",symbols:[{literal:"n"},{literal:"t"},{literal:"h"},{literal:"-"},{literal:"l"},{literal:"a"},{literal:"s"},{literal:"t"},{literal:"-"},{literal:"c"},{literal:"h"},{literal:"i"},{literal:"l"},{literal:"d"},{literal:"("}],postprocess:e=>e.join("")},{name:"nthLastChild",symbols:["nthLastChild$string$1","nthExpr",{literal:")"}],postprocess:e=>({type:"nth-child",index:-e[1]})},{name:"onlyChild$string$1",symbols:[{literal:"o"},{literal:"n"},{literal:"l"},{literal:"y"},{literal:"-"},{literal:"c"},{literal:"h"},{literal:"i"},{literal:"l"},{literal:"d"}],postprocess:e=>e.join("")},{name:"onlyChild",symbols:["onlyChild$string$1"],postprocess:()=>({type:"only-child"})}],ParserStart:"start"};function q(e){const s=new O.Parser(O.Grammar.fromCompiled(K));try{s.feed(e)}catch(n){throw new Error(`Error at character ${n.offset}`)}if(s.results.length===0)throw new Error("Unexpected end of input");return s.results[0]}function $(e,s,n,t,r){switch(t||(t=e),s.type){case"wildcard":return!0;case"type":return D.isType(e.type,s.name);case"list":return s.list.some(i=>$(e,i,n,t,r));case"compound":return s.list.every(i=>$(e,i,n,t,r));case"complex":switch(s.combinator){case"sibling":const i=e.getAllPrevSiblings();return i.length!==0&&$(e,s.right,n,t,r)&&i.some(S=>$(S,s.left,n,t,r));case"adjacent":const m=e.getPrevSibling();return m&&$(e,s.right,n,t,r)&&$(m,s.left,n,t,r);case"child":const f=e.parentPath;return f!==null&&$(e,s.right,n,t,r)&&$(f,s.left,n,t,r);case"descendant":const g=e.getAncestry().slice(1);return g.length!==0&&$(e,s.right,n,t,r)&&g.some(S=>$(S,s.left,n,t,r))}case"root":return e===t;case"only-child":return e.inList&&e.container.length===1;case"not":return!$(e,s.argument,n,void 0,r);case"is":return $(e,s.argument,n,void 0,r);case"has":return s.list.some(i=>{switch(i.combinator){case"sibling":const m=e.getAllNextSiblings();return m.length!==0&&m.some(y=>$(y,i.selector,n,t,e));case"adjacent":const f=e.getNextSibling();return f&&$(f,i.selector,n,t,e);case"child":case"descendant":let g=!1,S=structuredClone(i.selector);if(i.combinator=="child"){let y=S;for(;y.type=="complex";)y=y.left;y.left={type:"complex",combinator:"child",left:{type:"subject"},right:y.left}}return e.traverse({enter(y){$(y,S,n,t,e)&&(g=!0,y.stop())}}),g}});case"ancestry":if(!$(e,s.subject,n,t))return!1;const o=e.getAncestry();let c=s.path.length-1;for(let i=0;i<o.length;i++){const m=o[i];let{key:f,specifier:g}=s.path[c];if(m.key!==f||g&&!$(m,g,n,t))return!1;if(--c<0)return!0;if(typeof f=="number"){if(s.path[c].specifier||!m.inList||m.listKey!==s.path[c].key)return!1;if(--c<0)return!0}}return!0;case"nth-child":if(!e.inList)return!1;const u=e.key,p=s.index;return p.multiplier>0?(u-p.offset)%p.multiplier===0:p.multiplier<0?(u+p.offset)%p.multiplier===0:p.offset===u;case"attribute":let l=e.node;for(const i of s.names){if(!(i in l))return!1;l=l[i]}if(!s.operator)return!!l;const a=s.right;if(typeof a=="object"){if(typeof l!="string")return!1;const i=a.test(l);switch(s.operator){case"=":return i;case"!=":return!i;default:throw new Error(`unexpected binary operator ${s.operator}`)}}if(typeof l!=typeof a)return!1;switch(s.operator){case"=":return l===a;case"!=":return l!==a;case">":return l>a;case"<":return l<a;case">=":return l>=a;case"<=":return l<=a;case"^=":return typeof l!="string"?!1:l.startsWith(a);case"$=":return typeof l!="string"?!1:l.endsWith(a);case"*=":return typeof l!="string"?!1:l.includes(a)}case"subject":return e===r}throw new Error("Unknown selector type")}function Q(e,s,n,t,r,o,c){const u={};t?("scope"in t&&(u.scope=t.scope),"noScope"in t&&(u.noScope=t.noScope),"denylist"in t&&(u.denylist=t.denylist)):t={},"parentPath"in e?e.traverse({enter(p){$(p,s,t!=null?t:{},e)&&n(p)}}):A.default(e,{...u,enter(p){p.skip(),p.traverse({enter(l){$(l,s,t!=null?t:{},p)&&n(l)}})}},r,o,c)}function B(e,s,n,t,r){typeof s=="string"&&(s=q(s));const o=[];return Q(e,s,c=>o.push(c),n),o}function x(e){const s=document.createElement("span");return s.innerText=e,s.classList.add("terminal"),s}function C(e){const s=document.createElement("p");return s.appendChild(x(e)),s}function _(e){const s=x(JSON.stringify(e));return s.classList.add(typeof e),s}function L(e){const s=document.createElement("p");return s.appendChild(_(e)),s}function T(e){const s=document.createElement("span");return s.innerText=e,s.classList.add("type"),s}function d(e,s){if(s.classList.add("property"),s.dataset.key=e,s.tagName==="DETAILS"){const n=s.querySelector("summary");n.dataset.key=e}return s}function h(e){if(e.type==="wildcard"||e.type==="type"||e.type==="class"||e.type==="root"||e.type==="only-child")switch(e.type){case"wildcard":return C("*");case"type":return C(e.name);case"class":return C(":"+e.name);case"root":return C(":root");case"only-child":return C(":only-child")}const s=document.createElement("details"),n=document.createElement("summary");switch(n.appendChild(T(e.type)),s.appendChild(n),e.type){case"compound":case"list":for(const a of e.list)s.appendChild(h(a));break;case"is":case"not":s.appendChild(h(e.argument));break;case"has":for(const{combinator:a,selector:i}of e.list){const m=h(i);m.tagName==="DETAILS"?m.querySelector("summary").appendChild(document.createTextNode(" "+a)):m.innerText+=" "+a,s.appendChild(m)}break;case"complex":s.appendChild(d("left",h(e.left))),s.appendChild(d("combinator",x(e.combinator))),s.appendChild(d("right",h(e.right)));break;case"nth-child":const{index:t}=e,r=document.createElement("details"),o=document.createElement("summary");o.innerText="index",r.appendChild(o),r.appendChild(d("multiplier",x(t.multiplier.toString()))),r.appendChild(d("offset",x(t.offset.toString()))),s.appendChild(r);break;case"ancestry":s.appendChild(d("subject",h(e.subject)));const c=document.createElement("details"),u=document.createElement("summary");u.innerText="path",c.appendChild(u);for(const{key:a,specifier:i}of e.path){if(i===null){c.appendChild(L(a));continue}const m=h(i),f=m.tagName==="DETAILS"?m.querySelector("summary"):m;console.log(m.innerHTML),f.appendChild(document.createTextNode(" at ")),f.appendChild(_(a)),c.appendChild(m)}s.appendChild(c);break;case"attribute":const p=document.createElement("details"),l=document.createElement("summary");l.innerText="names",p.appendChild(l);for(const a of e.names)p.appendChild(L(a));if(s.appendChild(p),e.operator){s.appendChild(d("operator",x(e.operator)));const a=e.right;s.appendChild(d("right",typeof a=="object"?x(a.toString()):_(a)))}break}return s}function N(e){if(e.node===null)return x("null");const s=document.createElement("details"),n=document.createElement("summary");n.appendChild(T(e.type)),s.appendChild(n);for(const[t,r]of Object.entries(e.node))if(t!=="type"&&t!=="start"&&t!=="end"&&t!=="loc")if(M.VISITOR_KEYS[e.type].includes(t)){const o=e.get(t);if(Array.isArray(o)){const c=document.createElement("details"),u=document.createElement("summary");u.innerText=t,c.appendChild(u);for(const p of o)c.appendChild(N(p));s.appendChild(c)}else s.appendChild(d(t,N(o)))}else s.appendChild(d(t,_(r)));if(e.node.loc){let t=function({line:c,column:u}){const p=document.createElement("span");p.classList.add("terminal");const l=document.createElement("span");l.classList.add("terminal","number"),l.innerText=c.toString();const a=document.createElement("span");return a.classList.add("terminal","number"),a.innerText=u.toString(),p.replaceChildren(l,document.createTextNode(":"),a),p};const{start:r,end:o}=e.node.loc;s.appendChild(d("start",t(r))),s.appendChild(d("end",t(o)))}return s}j.register({id:"babelQuery"});j.setMonarchTokensProvider("babelQuery",{ws:`[ 	
\r\f]*`,tokenizer:{root:[["[\\*]","tag"],["[>\\+,\\.]","delimiter"],{include:"@string"},{include:"@number"}],number:[["-?(\\d*\\.)?\\d+",{token:"number"}]],string:[['~?"',{token:"string",next:"@stringenddoublequote"}],["~?'",{token:"string",next:"@stringendquote"}]],stringenddoublequote:[["\\\\.","string"],['"',{token:"string",next:"@pop"}],[/[^\\"]+/,"string"],[".","string"]],stringendquote:[["\\\\.","string"],["'",{token:"string",next:"@pop"}],[/[^\\']+/,"string"],[".","string"]]}});const P=document.getElementById("query-editor"),v=k.create(P,{value:"Function[id.name='foo'] IfStatement ExpressionStatement.consequent:is(BlockStatement).body.1 CallExpression:has(> Identifier[name='baz'])",language:"babelQuery",theme:"vs-dark",wordWrap:"off",lineNumbers:"off",lineNumbersMinChars:0,overviewRulerLanes:0,overviewRulerBorder:!1,renderLineHighlight:"none",lineDecorationsWidth:0,hideCursorInOverviewRuler:!0,glyphMargin:!1,folding:!1,scrollBeyondLastColumn:0,scrollbar:{horizontal:"hidden",vertical:"hidden"},find:{addExtraSpaceOnTop:!1,autoFindInSelection:"never",seedSearchStringFromSelection:"never"},minimap:{enabled:!1},automaticLayout:!0}),F=document.getElementById("javascript-editor"),E=k.create(F,{value:`function foo() {
    bar = baz();
    xyzzy = baz();
    if (bar) {
        bar = baz();
        xyzzy = baz();
    }
}`,language:"javascript",theme:"vs-dark",automaticLayout:!0});window.addEventListener("resize",e=>{v.layout({width:P.clientWidth,height:20}),E.layout({})});const W=document.querySelector("#selector-ast"),H=document.querySelector("#query-matches");function V(){const e=v.getModel().getLineContent(1),s=q(e);console.log(s);const n=h(s);W.replaceChildren(n);const t=E.getModel().getLinesContent().join(`
`),r=R(t);let o;o=B(r,s),o&&H.replaceChildren(...o.map(c=>{const u=N(c),{loc:p}=c.node;if(p){let l=[];u.addEventListener("mouseover",a=>{const i=E.getModel(),{start:m,end:f}=p;l=i.deltaDecorations(l,[{range:new I(m.line,m.column+1,f.line,f.column+1),options:{inlineClassName:"highlighted"}}])}),u.addEventListener("mouseout",a=>{l=E.getModel().deltaDecorations(l,[])})}return u}))}V();v.addCommand(z.Enter,()=>{});v.getModel().onDidChangeContent(V);
